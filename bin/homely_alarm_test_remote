#!/usr/bin/env perl

use strict;
use warnings;
use 5.014;

use FindBin qw();
use lib "$FindBin::Bin/../lib";

use App::HomelyAlarm;

package App::HomelyAlarm::RemoteTest {
    use MooseX::App::Simple qw(Config);
    with qw(App::HomelyAlarm::Role::Server);
    
    use URI::Escape qw(uri_escape);
    use Digest::HMAC_SHA1 qw(hmac_sha1_hex);
    use LWP::UserAgent;
    
    has 'ua' => (
        is              => 'rw',
        default         => sub {
            my $ua = LWP::UserAgent->new;
            $ua->timeout(10);
            return $ua;
        }
    );
    
    sub call_request {
        my ($self,$path,$method,$params) = @_;
        $method ||= 'POST';
        $params ||= {};
        $params->{AccountSid} = $self->twilio_sid;
        my $uri = $self->_build_uri('call/'.$path,$params);
        my $request = HTTP::Request->new($method => $uri);
        $request->header( 'X-Twilio-Signature' => hmac_sha1_hex($uri,$self->twilio_authtoken) );
        return $self->ua->request($request);
    }
    
    sub alarm_request {
        my ($self,$path,$message,$time,$severity) = @_;
        $message ||= 'empty';
        my $params = {
            time    => time(),
            message => $message,
        };
        $params->{severity} = $severity
            if defined $severity;
        my $uri = $self->_build_uri('alarm/'.$path,$params);
        my $request = HTTP::Request->new('POST',$uri);
        my $digest = hmac_sha1_hex($request->uri,$self->secret);
        $request->header('X-HomelyAlarm-Signature' => $digest);
        return $self->ua->request($request);
    }
    
    sub run {
        my ($self) = @_;
        
        my $response = $self->alarm_request('run','Rabbit is great','low');
        warn $response->as_string;
    }
    
    sub _build_uri {
        my ($self,$path,$params) = @_;
        # TODO https
        my $url = 'http://'.$self->host;
        $url .= ':'.$self->port
            if $self->port != 80;
            
        $url .= '/'.$path.'?';
        
        # TODO uri escape
        $url .= join('&',map { $_.'='.uri_escape($params->{$_}) } sort keys %{$params});
        
        return $url;
    }
}

App::HomelyAlarm::RemoteTest->new_with_options->run();
